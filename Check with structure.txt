Чек лист.

Набор идей тестов,которые проверяют работу программы.Можно сказать, что чек-лист — это упрощенный тест-кейс без шагов и прочего описания.
Предлагает подробную классификацию задач и разбивает сложный процесс на более мелкие шаги,
что обеспечивает нужную последовательность действий и не дает пропустить важные этапы. 

Преимущества чек листа:

1) Один пункт = одна проверка; 
2) Малое время создания-чек листы описывают кратко то, что хотим протестировать;
3) Структуризация информации-при составлении чек-листа нужно опираться на требования, чтобы не тестировать то, что не существенно;
4) Улучшение организации труда-чек-лист легко читается;
5) Чек-лист — источник результатов для отчёта: можно быстро посчитать сколько проверок выполнено, и в каком они статусе, узнать количество открытых репортов;
6) Чаще используют в небольшой команде,когда детально известна вся система.

Недостатки:

1) неопределенность тестового набора: каждый тестировщик выполняет пункт чек-листа по-своему;
2) неопределенность тестовых данных;
3) сложнее обучить начинающих сотрудников: пункты чек-листа чаще абстрагируются от конкретных элементов интерфейса и описывают то, что нужно сделать;
4) чек-лист менее эффективен для начинающих тестировщиков, лучше использовать тест-кейсы.

Чек-листы лучше применять на ранних этапах, когда софт быстро меняется, потому что тест-кейсы дорого поддерживать.

Атрибуты чек листа:

1) Номер строки - удобно в работе.Например обрати внимание на строку 35.
2) Название - блоков, секций, страниц, других элементов, которые следует протестировать.Регистрация\авторизация\профиль...
3) Действие - например заполняем поле регистрации:ввести дефис  в поле  поиска  кода страны в начале/середине/конце названия страны.
4) Результат проверки - выполненные пункты отмечаются статусами, например: “Passed”, “Failed”, “Blocked”, “Skipped”, “Not run”.
5) Окружение - обязательный атрибут,с указанием тестового окружения на котором производилась проверка.
6) Информация о тестировщике. 
	
Чек-лист для web приложения.

Действия для проверки   и результата проверки.


Форма для регистрации
											
1.	Ввести все предложенные данные корректно-значение поля принимается - passed	
2.	Ввести только обязательные поля	-значение поля принимается - passed	
3.	Заполнить все данные и обновить страницу- Очистка введённой информации.	
4.	Не заполнять данные и выполнить регистрацию- Отображена подсказка  email must be a valid email	- passed
5.	Оставить поле TITLE пустым -Отображена подсказка  email must be a valid email- passed	
6.	Ввести только пробелы в поле NAME -Отображена подсказка  must be a valid datа -passed
7.	Оставить поле NAME пустым- Отображена подсказка title is a required  - passed	
8.	Ввести минимально допустимые значения в поля ввода-Отображена подсказка  email must be a valid email - passed
	
Почта
						
1.	Ввести почту уже зарегистрированного пользователя-Значение поля принимается	 - passed
2.	Ввести скопированные ранее данные в строку ввода почты-Значение поля принимается  - passed
	
Локальная часть c валидной доменной частью
						
1.	ввести валидные данные с клавиатуры- Значение поля принимается	 - passed
2.	ввести валидные данные  скопированные ранее -Значение поля принимается	- passed
3.	ввести буквы кириллица а\A-я\Я -Значение поля принимается	- passed
4.	ввести только один символ(буква/цифра) -Значение поля принимается	- passed
5.	ввести дефис -Значение поля принимается	- passed
6.	ввести буквы с цифрами с кириллицей,с латиницей	-Значение поля принимается	- passed
7.	ввести точку -Значение поля принимается	- passed
8.	вести буквы латиницы a\А-z\Z -Значение поля принимается	- passed
9.	ввести данные с подчёркиванием -Значение поля принимается	- passed
10.	оставить  пустой -Отображена подсказка  email must be a valid email	- passed
11.	ввести две точки подряд	 -Отображена подсказка  email must be a valid email	- passed
12.	ввести спец.символы \ @  : ( )<> ",; -Отображена подсказка  email must be a valid email	- passed
13.	ввести точку после введённого никнейма -Отображена подсказка  email must be a valid email	- passed
14.	ввести данные  с пробелами в начале/в середине/в конце -Отображена подсказка  email must be a valid email- passed
	

Символ-разделитель «@»	
					
1.	ввести @ - Значение поля принимается	- passed
2.	отсутствие @ - Отображена подсказка  email must be a valid email	- passed
3.	ввести @@ - Отображена подсказка  email must be a valid email- passed
	
Доменная часть	
					
1.	ввести цифру\цифры в начале доменной части - Значение поля принимается	- passed
2.	ввести буквы кириллица а\A-я\Я в начале доменной части - Значение поля принимается	- passed
3.	вести буквы латиницы a\А-z\Z в начале доменной части - Значение поля принимается	- passed
4.	ввести буквы с цифрами с кириллицей,с латиницей в начале доменной части	- Значение поля принимается- passed	
5.	ввести валидные данные с клавиатуры - Значение поля принимается	- passed
6.	ввести валидные данные  скопированные ранее - Значение поля принимается	- passed
7.	оставить  пустой - Отображена подсказка  email must be a valid email	- passed
8.	"символ-разделитель «@»" - Отображена подсказка  email must be a valid email- passed	
9.	ввести спец.символы \ @ : ( )<> ",;=+_?. - Отображена подсказка  email must be a valid email	- passed

BIRTHDATE
						
1.	выбрать корректную дату where Adult User (18+) - Значение поля принимается	- passed
2.	Выбрать в качестве даты рождения текущее число - should be equal or earlier than Sun Feb 06 2007	 - passed
3.	Выбрать ещё не наступившую дату	- отображена подсказка should be equal or earlier than Sun Feb 06 2007	- passed
4.	Выбрать в качестве даты рождения давно прошедшую дату 01.02.1823 -Data saved-  failed
5.	Проверка «29 февраля» - отображена подсказака - Отображена подсказка  Invalid Date- passed	
6.	Оставить поле BIRTHDATE пустым  - отображена подсказка - Отображена подсказка  Invalid Date- passed	
7.	выбрать дату where Adult User( меньше18) User -Error birthdate	- passed

SUBMIT
						
1.	Проверка кнопки на расширение -Значение поля принимается	 - passed

Выполнила 21.02.2022 
Olga  build n 1.6.0 Google Chrome Версия 96.0.4664.45 (Официальная сборка), (32 бит)
